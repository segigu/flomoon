import { callAI } from './aiClient';
import {
  ASTRO_PROFILES,
  PRIMARY_PROFILE_ID,
  type AstroProfile,
} from '../data/astroProfiles';
import {
  buildNatalChartAnalysis,
  type NatalChartAnalysis,
} from './astro';

export interface PlanetDialogueMessage {
  planet: string;
  message: string;
}

export interface PersonalizedPlanetMessages {
  dialogue: PlanetDialogueMessage[];
  timestamp: number;
}

function serializeBirthData(profile: AstroProfile): string {
  const locationNote = profile.notes?.split('(')[0]?.trim() ?? '–¢–∏–∫—Å–∏, –†–æ—Å—Å–∏—è';
  const time = profile.birthTime ?? '12:00';
  return `{
  "date": "${profile.birthDate}",
  "time": "${time}",
  "timezone": "${profile.timeZone}",
  "location": "${locationNote}",
  "latitude": ${profile.latitude},
  "longitude": ${profile.longitude}
}`;
}

function serializeChartAnalysis(analysis: NatalChartAnalysis): string {
  const formatSection = (label: string, values: string[]): string => {
    if (!values.length) {
      return `${label}: []`;
    }
    return `${label}:\n- ${values.join('\n- ')}`;
  };

  return [
    formatSection('core_placements', analysis.corePlacements),
    formatSection('hard_aspects', analysis.hardAspects),
    formatSection('soft_aspects', analysis.softAspects),
  ].join('\n');
}

function indent(text: string, spaces = 2): string {
  const pad = ' '.repeat(spaces);
  return text
    .split('\n')
    .map(line => (line.length ? pad + line : line))
    .join('\n');
}

const NASTIA_PROFILE = ASTRO_PROFILES[PRIMARY_PROFILE_ID];
const NASTIA_CHART_ANALYSIS = buildNatalChartAnalysis(PRIMARY_PROFILE_ID);
const BIRTH_DATA_TEXT = serializeBirthData(NASTIA_PROFILE);
const CHART_ANALYSIS_TEXT = serializeChartAnalysis(NASTIA_CHART_ANALYSIS);

const STORAGE_KEY = 'nastia_personalized_planet_messages';
const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ localStorage
 */
function loadFromCache(): PersonalizedPlanetMessages | null {
  try {
    const cached = localStorage.getItem(STORAGE_KEY);
    if (!cached) return null;

    const parsed: PersonalizedPlanetMessages = JSON.parse(cached);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ –∫–µ—à (24 —á–∞—Å–∞)
    const age = Date.now() - parsed.timestamp;
    if (age > CACHE_DURATION) {
      console.log('[PlanetMessages] Cache expired, will regenerate');
      localStorage.removeItem(STORAGE_KEY);
      return null;
    }

    console.log('[PlanetMessages] ‚úÖ Loaded from cache');
    return parsed;
  } catch (error) {
    console.error('[PlanetMessages] Failed to load from cache:', error);
    return null;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ localStorage
 */
function saveToCache(messages: PersonalizedPlanetMessages): void {
  try {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(messages));
    console.log('[PlanetMessages] ‚úÖ Saved to cache');
  } catch (error) {
    console.error('[PlanetMessages] Failed to save to cache:', error);
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–ª–∞–Ω–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã.
 * –ö–∞–∂–¥–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –ø–æ–ª—É—á–∞–µ—Ç 5 —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Ä–∞–∂–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ –∫–∞—Ä—Ç—ã.
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –≤ localStorage –Ω–∞ 24 —á–∞—Å–∞.
 */
export async function generatePersonalizedPlanetMessages(
  claudeApiKey?: string,
  claudeProxyUrl?: string,
  openAIApiKey?: string,
  openAIProxyUrl?: string,
): Promise<PersonalizedPlanetMessages> {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
  const cached = loadFromCache();
  if (cached) {
    return cached;
  }

  const prompt = `–¢—ã ‚Äî –¥—Ä–∞–º–∞—Ç—É—Ä–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –∂–∏–≤–æ–π —Ä–∞–±–æ—á–∏–π –¥–∏–∞–ª–æ–≥ –º–µ–∂–¥—É –ø–ª–∞–Ω–µ—Ç–∞–º–∏.

üîπ –î–ê–ù–ù–´–ï –û –ß–ï–õ–û–í–ï–ö–ï
birth_data:
${indent(BIRTH_DATA_TEXT, 2)}
chart_analysis:
${indent(CHART_ANALYSIS_TEXT, 2)}

üîπ –ó–ê–î–ê–ù–ò–ï
–°–æ–∑–¥–∞–π –∂–∏–≤–æ–π –¥–∏–∞–ª–æ–≥ –∏–∑ 25-30 —Ñ—Ä–∞–∑, –≥–¥–µ –ø–ª–∞–Ω–µ—Ç—ã (–õ—É–Ω–∞, –ü–ª—É—Ç–æ–Ω, –ù–µ–ø—Ç—É–Ω, –£—Ä–∞–Ω, –í–µ–Ω–µ—Ä–∞, –°–∞—Ç—É—Ä–Ω, –•–∏—Ä–æ–Ω, –ú–µ—Ä–∫—É—Ä–∏–π, –ú–∞—Ä—Å, –Æ–ø–∏—Ç–µ—Ä) –û–ë–°–£–ñ–î–ê–Æ–¢ –º–µ–∂–¥—É —Å–æ–±–æ–π, –∫–∞–∫—É—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –æ–Ω–∏ —Å–µ–π—á–∞—Å –ø—Ä–∏–¥—É–º–∞—é—Ç –¥–ª—è –ù–∞—Å—Ç–∏.

–≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –†–ê–ë–û–ß–ò–ô –†–ê–ó–ì–û–í–û–† –ø–ª–∞–Ω–µ—Ç, –∫–∞–∫ –±—É–¥—Ç–æ –æ–Ω–∏ —Å–æ–±—Ä–∞–ª–∏—Å—å –≤ –∫–æ–º–Ω–∞—Ç–µ –∏ –æ–±—Å—É–∂–¥–∞—é—Ç:
- –ö–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å?
- –ö–∞–∫–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ–∫–∞–∑–∞—Ç—å?
- –ú–æ–∂–µ—Ç, –≤–æ—Ç —Ç–∞–∫ —Å–¥–µ–ª–∞–µ–º? –ù–µ—Ç, –¥–∞–≤–∞–π –ø–æ-–¥—Ä—É–≥–æ–º—É!
- –°–º–æ—Ç—Ä–∏, —É –Ω–µ—ë –∂–µ –≤–æ—Ç —ç—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω... –¥–∞–≤–∞–π –µ–≥–æ –ø–æ–∫–∞–∂–µ–º!

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –î–ò–ê–õ–û–ì –° –Æ–ú–û–†–û–ú –ò –°–ê–†–ö–ê–ó–ú–û–ú ‚Äî –ø–ª–∞–Ω–µ—Ç—ã –ø–æ–¥—à—É—á–∏–≤–∞—é—Ç –¥—Ä—É–≥ –Ω–∞–¥ –¥—Ä—É–≥–æ–º –∏ –Ω–∞–¥ –ù–∞—Å—Ç–µ–π
2. –°–í–Ø–ó–ù–´–ô –†–ê–ó–ì–û–í–û–† ‚Äî —Ä–µ–ø–ª–∏–∫–∏ –≤—ã—Ç–µ–∫–∞—é—Ç –æ–¥–Ω–∞ –∏–∑ –¥—Ä—É–≥–æ–π, —ç—Ç–æ –ù–ê–°–¢–û–Ø–©–ò–ô –¥–∏–∞–ª–æ–≥
3. –ü–û–í–ï–°–¢–í–û–í–ê–¢–ï–õ–¨–ù–´–ô –°–¢–ò–õ–¨ ‚Äî –æ–Ω–∏ —Ä–∞—Å—Å—É–∂–¥–∞—é—Ç, —Å–ø–æ—Ä—è—Ç, —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è, –ø–µ—Ä–µ–±–∏–≤–∞—é—Ç
4. –û –ß–Å–ú –ì–û–í–û–†–Ø–¢: –æ–±—Å—É–∂–¥–∞—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –ù–∞—Å—Ç–∏, –µ—ë –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è, –∫–∞–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –Ω–µ—ë –ø—Ä–∏–¥—É–º–∞—Ç—å
5. –ö–û–†–û–¢–ö–ò–ï –†–ï–ü–õ–ò–ö–ò ‚Äî –∫–∞–∂–¥–∞—è —Ñ—Ä–∞–∑–∞ –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤ –º–∞–∫—Å–∏–º—É–º
6. –ù–ï–¢ –ê–°–¢–†–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –¢–ï–†–ú–ò–ù–û–í ‚Äî –≥–æ–≤–æ—Ä—è—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º
7. –†–ï–ê–õ–¨–ù–´–ï –ü–ê–¢–¢–ï–†–ù–´ –∏–∑ chart_analysis ‚Äî –æ–ø–∏—Ä–∞—é—Ç—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã

–ü–†–ò–ú–ï–†–´ –°–¢–ò–õ–Ø (–∫–∞–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–∏–∞–ª–æ–≥):

–õ—É–Ω–∞: "–¢–∞–∫, –Ω—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º? –°–µ–≥–æ–¥–Ω—è –æ–Ω–∞ –≤ —Ç–∞–∫–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏..."
–ü–ª—É—Ç–æ–Ω: "–û, —è —É–∂–µ –∑–Ω–∞—é —á—Ç–æ –µ–π –ø–æ–¥–∫–∏–Ω—É—Ç—å. –¢—ë–º–Ω–µ–Ω—å–∫–æ–µ —Ç–∞–∫–æ–µ."
–í–µ–Ω–µ—Ä–∞: "–ü–ª—É—Ç–æ–Ω, —Ö–≤–∞—Ç–∏—Ç –ø—É–≥–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ª—É—á—à–µ."
–ú–∞—Ä—Å: "–û–ø—è—Ç—å –ø—Ä–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è? –ú–æ–∂–µ—Ç, –ø—Ä–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å?"
–õ—É–Ω–∞: "–ù–µ-–Ω–µ, –æ–Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–µ –ª—é–±–∏—Ç, —Å—Ä–∞–∑—É —Å–ø—Ä—è—á–µ—Ç—Å—è."
–°–∞—Ç—É—Ä–Ω: "–í–æ—Ç –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –∏ –Ω–∞–¥–æ! –ü–æ—Ä–∞ –Ω–∞—É—á–∏—Ç—å—Å—è."
–ù–µ–ø—Ç—É–Ω: "–ü—Ä–µ–¥–ª–∞–≥–∞—é –µ–π –≤–æ–æ–±—â–µ –≤—Å—ë –∑–∞–ø—É—Ç–∞—Ç—å, –ø—É—Å—Ç—å —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è..."
–ú–µ—Ä–∫—É—Ä–∏–π: "–ù–µ–ø—Ç—É–Ω, —Ç—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ç–∞–∫. –î–∞–≤–∞–π—Ç–µ –ª–æ–≥–∏—á–Ω–æ."
–£—Ä–∞–Ω: "–ê –¥–∞–≤–∞–π—Ç–µ —è –≤—Å—ë –ø–µ—Ä–µ–≤–µ—Ä–Ω—É —Å –Ω–æ–≥ –Ω–∞ –≥–æ–ª–æ–≤—É? –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç!"
–Æ–ø–∏—Ç–µ—Ä: "–ü–æ–≥–æ–¥–∏—Ç–µ, –∞ –∫–∞–∫–æ–π —Å–º—ã—Å–ª –≤ —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏?"

–ò —Ç–∞–∫ –¥–∞–ª–µ–µ ‚Äî 25-30 —Ñ—Ä–∞–∑ –°–í–Ø–ó–ù–û–ì–û —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, –≥–¥–µ –æ–Ω–∏ –í–ú–ï–°–¢–ï –ø—Ä–∏–¥—É–º—ã–≤–∞—é—Ç –∏—Å—Ç–æ—Ä–∏—é.

üîπ –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):
{
  "dialogue": [
    {"planet": "–õ—É–Ω–∞", "message": "—Ñ—Ä–∞–∑–∞ 1"},
    {"planet": "–ü–ª—É—Ç–æ–Ω", "message": "—Ñ—Ä–∞–∑–∞ 2"},
    {"planet": "–í–µ–Ω–µ—Ä–∞", "message": "—Ñ—Ä–∞–∑–∞ 3"},
    ... (–≤—Å–µ–≥–æ 25-30 —Ñ—Ä–∞–∑)
  ]
}

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
1. –î–∏–∞–ª–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –°–í–Ø–ó–ù–´–ú ‚Äî —ç—Ç–æ –û–î–ò–ù —Ä–∞–∑–≥–æ–≤–æ—Ä, –∞ –Ω–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã
2. –ü–ª–∞–Ω–µ—Ç—ã –û–¢–í–ï–ß–ê–Æ–¢ –¥—Ä—É–≥ –¥—Ä—É–≥—É, —Å–ø–æ—Ä—è—Ç, —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è, —Ä–∞–∑–≤–∏–≤–∞—é—Ç –º—ã—Å–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞
3. –Æ–ú–û–† –∏ –°–ê–†–ö–ê–ó–ú –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã ‚Äî –ø–ª–∞–Ω–µ—Ç—ã –Ω–µ —Ü–µ—Ä–µ–º–æ–Ω—è—Ç—Å—è
4. –í—Å–µ —Ñ—Ä–∞–∑—ã –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
5. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û JSON –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ Markdown
6. –ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –∏–∑ chart_analysis ‚Äî –¥–∏–∞–ª–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–¥ –ù–∞—Å—Ç—é`;

  try {
    console.log('[PlanetMessages] Starting AI call to generate personalized messages');

    const result = await callAI({
      system:
        '–¢—ã –¥—Ä–∞–º–∞—Ç—É—Ä–≥ –∏ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –∂–∏–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏ –º–µ–∂–¥—É –ø–ª–∞–Ω–µ—Ç–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–º JSON.',
      messages: [
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 0.85,
      maxTokens: 3000,
      claudeApiKey,
      claudeProxyUrl,
      openAIApiKey,
      openAIProxyUrl,
      // –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º preferOpenAI - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Claude (Haiku 4.5)
    });

    console.log('[PlanetMessages] AI call completed, parsing response');

    let text = result.text.trim();
    text = text.replace(/```json\s*/gi, '').replace(/```/g, '').trim();

    let parsed: any;
    try {
      parsed = JSON.parse(text);
    } catch (parseError) {
      console.error('[PlanetMessages] JSON parse error:', parseError);
      console.error('[PlanetMessages] Raw text (first 500 chars):', text.slice(0, 500));

      // –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      try {
        const fixedText = text
          .replace(/[\r\n]+/g, ' ')
          .replace(/\s+/g, ' ');
        parsed = JSON.parse(fixedText);
        console.log('[PlanetMessages] ‚úÖ Successfully parsed after fixing newlines');
      } catch (fixError) {
        console.error('[PlanetMessages] Failed to parse JSON, using fallback');
        throw parseError;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∏–∞–ª–æ–≥–∞
    const dialogue = Array.isArray(parsed?.dialogue) ? parsed.dialogue : [];

    if (dialogue.length < 20) {
      console.warn('[PlanetMessages] Dialogue too short, using fallback');
      throw new Error('Dialogue too short');
    }

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏–∞–ª–æ–≥–∞
    const validDialogue: PlanetDialogueMessage[] = dialogue
      .filter((msg: any) =>
        typeof msg?.planet === 'string' &&
        typeof msg?.message === 'string' &&
        msg.planet.trim().length > 0 &&
        msg.message.trim().length > 0
      )
      .map((msg: any) => ({
        planet: msg.planet.trim(),
        message: msg.message.trim(),
      }));

    if (validDialogue.length < 20) {
      console.warn('[PlanetMessages] Not enough valid dialogue messages, using fallback');
      throw new Error('Not enough valid dialogue messages');
    }

    console.log('[PlanetMessages] ‚úÖ Successfully generated dialogue with', validDialogue.length, 'messages');

    const finalResult: PersonalizedPlanetMessages = {
      dialogue: validDialogue,
      timestamp: Date.now(),
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
    saveToCache(finalResult);

    return finalResult;
  } catch (error) {
    console.warn('[PlanetMessages] Failed to generate via AI, using fallback', error);
    return getFallbackPlanetMessages();
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç fallback –¥–∏–∞–ª–æ–≥ –ø–ª–∞–Ω–µ—Ç
 */
function getFallbackPlanetMessages(): PersonalizedPlanetMessages {
  const dialogue: PlanetDialogueMessage[] = [
    { planet: '–õ—É–Ω–∞', message: '–¢–∞–∫, –∫–æ–ª–ª–µ–≥–∏, —á—Ç–æ —É –Ω–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –ø–æ–≤–µ—Å—Ç–∫–µ?' },
    { planet: '–ü–ª—É—Ç–æ–Ω', message: '–£ –º–µ–Ω—è —Ç—É—Ç –ø–∞—Ä–æ—á–∫–∞ —Ç—ë–º–Ω—ã—Ö –∏–¥–µ–π –ø—Ä–∏–ø–∞—Å–µ–Ω–∞...' },
    { planet: '–í–µ–Ω–µ—Ä–∞', message: '–ü–ª—É—Ç–æ–Ω, –Ω—É —Ö–≤–∞—Ç–∏—Ç —Ç–µ–±–µ! –î–∞–≤–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –ø—Ä–æ –ª—é–±–æ–≤—å –ª—É—á—à–µ.' },
    { planet: '–ú–∞—Ä—Å', message: '–û–ø—è—Ç—å –ø—Ä–æ –ª—é–±–æ–≤—å? –ú–æ–∂–µ—Ç, –∫–æ–Ω—Ñ–ª–∏–∫—Ç –∫–∞–∫–æ–π —É—Å—Ç—Ä–æ–∏–º?' },
    { planet: '–õ—É–Ω–∞', message: '–û–Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–µ –ª—é–±–∏—Ç, —Å—Ä–∞–∑—É –≤ –ø–∞–Ω—Ü–∏—Ä—å —Å–ø—Ä—è—á–µ—Ç—Å—è.' },
    { planet: '–°–∞—Ç—É—Ä–Ω', message: '–í–æ—Ç –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –∏ –Ω—É–∂–Ω–æ. –ü–æ—Ä–∞ —É—á–∏—Ç—å—Å—è, –∞ –Ω–µ –ø—Ä—è—Ç–∞—Ç—å—Å—è.' },
    { planet: '–ù–µ–ø—Ç—É–Ω', message: '–ê —è –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤—Å—ë —Ç—É–º–∞–Ω–æ–º –æ–∫—É—Ç–∞—Ç—å, –ø—É—Å—Ç—å –¥–æ–≥–∞–¥—ã–≤–∞–µ—Ç—Å—è...' },
    { planet: '–ú–µ—Ä–∫—É—Ä–∏–π', message: '–ù–µ–ø—Ç—É–Ω, —Ç—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ç–∞–∫! –î–∞–≤–∞–π—Ç–µ –ª–æ–≥–∏—á–Ω–æ –≤—Å—ë –ø–æ—Å—Ç—Ä–æ–∏–º.' },
    { planet: '–£—Ä–∞–Ω', message: '–ê –¥–∞–≤–∞–π—Ç–µ —è –≤—Å—ë —Å –Ω–æ–≥ –Ω–∞ –≥–æ–ª–æ–≤—É –ø–µ—Ä–µ–≤–µ—Ä–Ω—É? –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç—å!' },
    { planet: '–Æ–ø–∏—Ç–µ—Ä', message: '–ú–∏–Ω—É—Ç–æ—á–∫—É! –ê –≤ —á—ë–º —Å–º—ã—Å–ª –∏—Å—Ç–æ—Ä–∏–∏ –±—É–¥–µ—Ç?' },
    { planet: '–•–∏—Ä–æ–Ω', message: '–í–∏–∂—É —Ç—É—Ç –æ–¥–Ω—É —Å—Ç–∞—Ä—É—é —Ä–∞–Ω—É... –º–æ–∂–µ–º –Ω–∞ –Ω–µ—ë –Ω–∞–¥–∞–≤–∏—Ç—å.' },
    { planet: '–õ—É–Ω–∞', message: '–û—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ, –æ–Ω–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–µ–Ω—å.' },
    { planet: '–ü–ª—É—Ç–æ–Ω', message: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è ‚Äî —ç—Ç–æ —Ö–æ—Ä–æ—à–æ. –ì–ª—É–±–∂–µ –∫–æ–ø–Ω—ë–º.' },
    { planet: '–í–µ–Ω–µ—Ä–∞', message: '–¢–æ–ª—å–∫–æ –Ω–µ –ø–µ—Ä–µ–±–æ—Ä—â–∏—Ç–µ, –∞ —Ç–æ –æ–ø—è—Ç—å –∏—Å–ø—É–≥–∞–µ—Ç–µ.' },
    { planet: '–ú–∞—Ä—Å', message: '–ò—Å–ø—É–≥–∞—Ç—å ‚Äî —ç—Ç–æ –∂–µ –º–æ—Ç–∏–≤–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!' },
    { planet: '–°–∞—Ç—É—Ä–Ω', message: '–°–æ–≥–ª–∞—Å–µ–Ω —Å –ú–∞—Ä—Å–æ–º. –ë–µ–∑ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –Ω–µ –±—É–¥–µ—Ç —Ä–æ—Å—Ç–∞.' },
    { planet: '–ú–µ—Ä–∫—É—Ä–∏–π', message: '–¢–∞–∫, —Å—Ç–æ–ø. –î–∞–≤–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—ã—Å—Ç—Ä–æ–∏–º —Å–Ω–∞—á–∞–ª–∞.' },
    { planet: '–ù–µ–ø—Ç—É–Ω', message: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî —ç—Ç–æ —Å–∫—É—á–Ω–æ. –ü—É—Å—Ç—å –±—É–¥–µ—Ç –∑–∞–≥–∞–¥–æ—á–Ω–æ!' },
    { planet: '–Æ–ø–∏—Ç–µ—Ä', message: '–ò –≤—Å—ë-—Ç–∞–∫–∏ –Ω–∞–¥–æ –ø–æ–∫–∞–∑–∞—Ç—å –µ–π —á—Ç–æ-—Ç–æ –±–æ–ª—å—à–µ–µ, —É—Ä–æ–∫ –∫–∞–∫–æ–π-—Ç–æ.' },
    { planet: '–£—Ä–∞–Ω', message: '–£—Ä–æ–∫ ‚Äî —ç—Ç–æ –°–∞—Ç—É—Ä–Ω. –Ø –∑–∞ —Ö–∞–æ—Å –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è!' },
    { planet: '–•–∏—Ä–æ–Ω', message: '–û—Ç–∫—Ä–æ–≤–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ–ª—å ‚Äî –º–æ—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.' },
    { planet: '–õ—É–Ω–∞', message: '–õ–∞–¥–Ω–æ, –ø–æ—Ö–æ–∂–µ, –ø–ª–∞–Ω —Å–æ–∑—Ä–µ–ª. –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º?' },
    { planet: '–ü–ª—É—Ç–æ–Ω', message: '–û –¥–∞, —Å–µ–π—á–∞—Å –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ...' },
    { planet: '–í–µ–Ω–µ—Ä–∞', message: '–¢–æ–ª—å–∫–æ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!' },
    { planet: '–ú–∞—Ä—Å', message: '–í–ø–µ—Ä—ë–¥! –î–∞–≤–Ω–æ –ø–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.' },
    { planet: '–°–∞—Ç—É—Ä–Ω', message: '–ù–∞—á–∏–Ω–∞–µ–º. –ò –±–µ–∑ –ø–æ–±–ª–∞–∂–µ–∫.' },
    { planet: '–ú–µ—Ä–∫—É—Ä–∏–π', message: '–ó–∞–ø–∏—Å–∞–ª –≤—Å—ë, –º–æ–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å.' },
    { planet: '–ù–µ–ø—Ç—É–Ω', message: '–î–æ–±–∞–≤–∏–ª –Ω–µ–º–Ω–æ–≥–æ –º–∞–≥–∏–∏. –ì–æ—Ç–æ–≤–æ!' },
    { planet: '–Æ–ø–∏—Ç–µ—Ä', message: '–¢–æ–≥–¥–∞ –≤–ø–µ—Ä—ë–¥, –∫ –±–æ–ª—å—à–∏–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º!' },
    { planet: '–£—Ä–∞–Ω', message: '–ü–æ–µ—Ö–∞–ª–∏! –ë—É–¥–µ—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ.' },
  ];

  return {
    dialogue,
    timestamp: Date.now(),
  };
}
