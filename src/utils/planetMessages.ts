import { callAI } from './aiClient';
import {
  ASTRO_PROFILES,
  PRIMARY_PROFILE_ID,
  type AstroProfile,
} from '../data/astroProfiles';
import {
  buildNatalChartAnalysis,
  type NatalChartAnalysis,
} from './astro';

export interface PlanetMessage {
  planet: string;
  messages: string[];
}

export interface PersonalizedPlanetMessages {
  messages: PlanetMessage[];
  timestamp: number;
}

function serializeBirthData(profile: AstroProfile): string {
  const locationNote = profile.notes?.split('(')[0]?.trim() ?? '–¢–∏–∫—Å–∏, –†–æ—Å—Å–∏—è';
  const time = profile.birthTime ?? '12:00';
  return `{
  "date": "${profile.birthDate}",
  "time": "${time}",
  "timezone": "${profile.timeZone}",
  "location": "${locationNote}",
  "latitude": ${profile.latitude},
  "longitude": ${profile.longitude}
}`;
}

function serializeChartAnalysis(analysis: NatalChartAnalysis): string {
  const formatSection = (label: string, values: string[]): string => {
    if (!values.length) {
      return `${label}: []`;
    }
    return `${label}:\n- ${values.join('\n- ')}`;
  };

  return [
    formatSection('core_placements', analysis.corePlacements),
    formatSection('hard_aspects', analysis.hardAspects),
    formatSection('soft_aspects', analysis.softAspects),
  ].join('\n');
}

function indent(text: string, spaces = 2): string {
  const pad = ' '.repeat(spaces);
  return text
    .split('\n')
    .map(line => (line.length ? pad + line : line))
    .join('\n');
}

const NASTIA_PROFILE = ASTRO_PROFILES[PRIMARY_PROFILE_ID];
const NASTIA_CHART_ANALYSIS = buildNatalChartAnalysis(PRIMARY_PROFILE_ID);
const BIRTH_DATA_TEXT = serializeBirthData(NASTIA_PROFILE);
const CHART_ANALYSIS_TEXT = serializeChartAnalysis(NASTIA_CHART_ANALYSIS);

const STORAGE_KEY = 'nastia_personalized_planet_messages';
const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ localStorage
 */
function loadFromCache(): PersonalizedPlanetMessages | null {
  try {
    const cached = localStorage.getItem(STORAGE_KEY);
    if (!cached) return null;

    const parsed: PersonalizedPlanetMessages = JSON.parse(cached);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ –∫–µ—à (24 —á–∞—Å–∞)
    const age = Date.now() - parsed.timestamp;
    if (age > CACHE_DURATION) {
      console.log('[PlanetMessages] Cache expired, will regenerate');
      localStorage.removeItem(STORAGE_KEY);
      return null;
    }

    console.log('[PlanetMessages] ‚úÖ Loaded from cache');
    return parsed;
  } catch (error) {
    console.error('[PlanetMessages] Failed to load from cache:', error);
    return null;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ localStorage
 */
function saveToCache(messages: PersonalizedPlanetMessages): void {
  try {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(messages));
    console.log('[PlanetMessages] ‚úÖ Saved to cache');
  } catch (error) {
    console.error('[PlanetMessages] Failed to save to cache:', error);
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–ª–∞–Ω–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã.
 * –ö–∞–∂–¥–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –ø–æ–ª—É—á–∞–µ—Ç 5 —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Ä–∞–∂–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ –∫–∞—Ä—Ç—ã.
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –≤ localStorage –Ω–∞ 24 —á–∞—Å–∞.
 */
export async function generatePersonalizedPlanetMessages(
  claudeApiKey?: string,
  claudeProxyUrl?: string,
  openAIApiKey?: string,
  openAIProxyUrl?: string,
): Promise<PersonalizedPlanetMessages> {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
  const cached = loadFromCache();
  if (cached) {
    return cached;
  }

  const prompt = `–¢—ã ‚Äî –∞—Å—Ç—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–ª–∞–Ω–µ—Ç.

üîπ –î–ê–ù–ù–´–ï –û –ß–ï–õ–û–í–ï–ö–ï
birth_data:
${indent(BIRTH_DATA_TEXT, 2)}
chart_analysis:
${indent(CHART_ANALYSIS_TEXT, 2)}

üîπ –ó–ê–î–ê–ù–ò–ï
–°–æ–∑–¥–∞–π –ø–æ 5 –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–∞–∂–¥–æ–π –∏–∑ 10 –ø–ª–∞–Ω–µ—Ç: –õ—É–Ω–∞, –ü–ª—É—Ç–æ–Ω, –ù–µ–ø—Ç—É–Ω, –£—Ä–∞–Ω, –í–µ–Ω–µ—Ä–∞, –°–∞—Ç—É—Ä–Ω, –•–∏—Ä–æ–Ω, –ú–µ—Ä–∫—É—Ä–∏–π, –ú–∞—Ä—Å, –Æ–ø–∏—Ç–µ—Ä.

–ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ:
1. –ë—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ –æ—Ç –ª–∏—Ü–∞ –ø–ª–∞–Ω–µ—Ç—ã (–ø–µ—Ä–≤–æ–µ –ª–∏—Ü–æ: "–Ø –≤–∏–∂—É...", "–ß—É–≤—Å—Ç–≤—É—é...")
2. –û—Ç—Ä–∞–∂–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
3. –ó–≤—É—á–∞—Ç—å –∫–∞–∫ –±—É–¥—Ç–æ –ø–ª–∞–Ω–µ—Ç—ã –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–±—Å—É–∂–¥–∞—é—Ç —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–∞–∫ –±—É–¥—Ç–æ –∑–Ω–∞—é—Ç –µ–≥–æ
4. –ë—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º (–¥–æ 80 —Å–∏–º–≤–æ–ª–æ–≤) –∏ —ë–º–∫–∏–º
5. –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã (–±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–æ–º–æ–≤, –≥—Ä–∞–¥—É—Å–æ–≤, –∞—Å–ø–µ–∫—Ç–æ–≤)
6. –ì–æ–≤–æ—Ä–∏—Ç—å –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –ø–æ–≤–µ–¥–µ–Ω–∏–∏, —ç–º–æ—Ü–∏—è—Ö, –ø–∞—Ç—Ç–µ—Ä–Ω–∞—Ö ‚Äî —Ç–æ, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —É–∑–Ω–∞–µ—Ç –≤ —Å–µ–±–µ

–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
- –õ—É–Ω–∞: "–ß—É–≤—Å—Ç–≤—É—é –µ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è... –Ω–µ–ø—Ä–æ—Å—Ç–æ–µ"
- –ü–ª—É—Ç–æ–Ω: "–ö–æ–ø–∞—é—Å—å –≤ –µ—ë –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–∏... —Ç—É—Ç —Ç–µ–º–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è"
- –í–µ–Ω–µ—Ä–∞: "–í–∏–∂—É, –∫–∞–∫ –æ–Ω–∞ –ø—Ä–∏—Ç–≤–æ—Ä—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º–∏"
- –°–∞—Ç—É—Ä–Ω: "–ü—Ä–æ–≤–µ—Ä—è—é –µ—ë –Ω–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Å —Å–æ–±–æ–π"

–ü—Ä–∏–º–µ—Ä—ã –ü–õ–û–•–ò–• —Å–æ–æ–±—â–µ–Ω–∏–π (–ù–ï –¥–µ–ª–∞–π —Ç–∞–∫):
- "–õ—É–Ω–∞ –≤ 4-–º –¥–æ–º–µ –¥–µ–ª–∞–µ—Ç –µ—ë —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π" (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–º–∞)
- "–ö–≤–∞–¥—Ä–∞—Ç –∫ –°–∞—Ç—É—Ä–Ω—É —Å–æ–∑–¥–∞—ë—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ" (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞—Å–ø–µ–∫—Ç–∞)
- "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å" (–Ω–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ)

üîπ –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):
{
  "–õ—É–Ω–∞": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–ü–ª—É—Ç–æ–Ω": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–ù–µ–ø—Ç—É–Ω": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–£—Ä–∞–Ω": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–í–µ–Ω–µ—Ä–∞": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–°–∞—Ç—É—Ä–Ω": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–•–∏—Ä–æ–Ω": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–ú–µ—Ä–∫—É—Ä–∏–π": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–ú–∞—Ä—Å": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"],
  "–Æ–ø–∏—Ç–µ—Ä": ["—Å–æ–æ–±—â–µ–Ω–∏–µ 1", "—Å–æ–æ–±—â–µ–Ω–∏–µ 2", "—Å–æ–æ–±—â–µ–Ω–∏–µ 3", "—Å–æ–æ–±—â–µ–Ω–∏–µ 4", "—Å–æ–æ–±—â–µ–Ω–∏–µ 5"]
}

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
1. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
2. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û JSON –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ Markdown
3. –ö–∞–∂–¥–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Ä–æ–≤–Ω–æ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
4. –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ chart_analysis`;

  try {
    console.log('[PlanetMessages] Starting AI call to generate personalized messages');

    const result = await callAI({
      system:
        '–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–º JSON.',
      messages: [
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 0.7,
      maxTokens: 2500,
      claudeApiKey,
      claudeProxyUrl,
      openAIApiKey,
      openAIProxyUrl,
      preferOpenAI: true, // –ò—Å–ø–æ–ª—å–∑—É–µ–º OpenAI –ø–µ—Ä–≤—ã–º –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
      useGPT4oMini: true, // –ò—Å–ø–æ–ª—å–∑—É–µ–º gpt-4o-mini –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —ç–∫–æ–Ω–æ–º–∏–∏
    });

    console.log('[PlanetMessages] AI call completed, parsing response');

    let text = result.text.trim();
    text = text.replace(/```json\s*/gi, '').replace(/```/g, '').trim();

    let parsed: any;
    try {
      parsed = JSON.parse(text);
    } catch (parseError) {
      console.error('[PlanetMessages] JSON parse error:', parseError);
      console.error('[PlanetMessages] Raw text (first 500 chars):', text.slice(0, 500));

      // –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      try {
        const fixedText = text
          .replace(/[\r\n]+/g, ' ')
          .replace(/\s+/g, ' ');
        parsed = JSON.parse(fixedText);
        console.log('[PlanetMessages] ‚úÖ Successfully parsed after fixing newlines');
      } catch (fixError) {
        console.error('[PlanetMessages] Failed to parse JSON, using fallback');
        throw parseError;
      }
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    const messages: PlanetMessage[] = Object.entries(parsed).map(([planet, msgs]) => ({
      planet,
      messages: Array.isArray(msgs) ? msgs.slice(0, 5) : [],
    }));

    console.log('[PlanetMessages] Parsed messages for', messages.length, 'planets');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –≤—Å–µ—Ö –ø–ª–∞–Ω–µ—Ç
    const requiredPlanets = ['–õ—É–Ω–∞', '–ü–ª—É—Ç–æ–Ω', '–ù–µ–ø—Ç—É–Ω', '–£—Ä–∞–Ω', '–í–µ–Ω–µ—Ä–∞', '–°–∞—Ç—É—Ä–Ω', '–•–∏—Ä–æ–Ω', '–ú–µ—Ä–∫—É—Ä–∏–π', '–ú–∞—Ä—Å', '–Æ–ø–∏—Ç–µ—Ä'];
    const existingPlanets = new Set(messages.map(m => m.planet));

    for (const planet of requiredPlanets) {
      if (!existingPlanets.has(planet)) {
        console.warn(`[PlanetMessages] Missing messages for ${planet}, using fallback`);
        messages.push({
          planet,
          messages: getFallbackMessages(planet),
        });
      }
    }

    console.log('[PlanetMessages] ‚úÖ Successfully generated personalized messages for all planets');

    const finalResult: PersonalizedPlanetMessages = {
      messages,
      timestamp: Date.now(),
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
    saveToCache(finalResult);

    return finalResult;
  } catch (error) {
    console.warn('[PlanetMessages] Failed to generate via AI, using fallback', error);
    return getFallbackPlanetMessages();
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç fallback —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–ª–∞–Ω–µ—Ç—ã
 */
function getFallbackMessages(planet: string): string[] {
  const fallbacks: Record<string, string[]> = {
    '–õ—É–Ω–∞': [
      '–ß—É–≤—Å—Ç–≤—É—é –µ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è... –Ω–µ–ø—Ä–æ—Å—Ç–æ–µ',
      '–û–Ω–∞ —è–≤–Ω–æ —á—Ç–æ-—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç –æ—Ç —Å–µ–±—è',
      '–í–∏–∂—É –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ –º–µ–∂–¥—É —Ç–µ–º, —á—Ç–æ –æ–Ω–∞ —Ö–æ—á–µ—Ç –∏ —á—Ç–æ –¥–µ–ª–∞–µ—Ç',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –æ–Ω–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏',
      '–û–Ω–∞ –±–æ–∏—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —É—è–∑–≤–∏–º–æ–π',
    ],
    '–ü–ª—É—Ç–æ–Ω': [
      '–ö–æ–ø–∞—é—Å—å –≤ –µ—ë –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–∏... —Ç—É—Ç —Ç–µ–º–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è',
      '–í–∏–∂—É —Å—Ç—Ä–∞—Ö, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ –Ω–µ –ø—Ä–∏–∑–Ω–∞—ë—Ç',
      '–û–±–Ω–∞—Ä—É–∂–∏–ª –µ—ë —Ç–µ–Ω–µ–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É',
      '–û–Ω–∞ –ø—Ä—è—á–µ—Ç —Å–≤–æ—é —Å–∏–ª—É, –±–æ–∏—Ç—Å—è –µ—ë',
      '–ù–∞—à—ë–ª —Ç–æ, –æ—Ç —á–µ–≥–æ –æ–Ω–∞ —É–±–µ–≥–∞–µ—Ç –≥–æ–¥–∞–º–∏',
    ],
    '–ù–µ–ø—Ç—É–Ω': [
      '–î–æ–±–∞–≤–ª—è—é —Ç—É–º–∞–Ω–∞... –ø—É—Å—Ç—å –ø–æ–ø–ª—É—Ç–∞–µ—Ç –º–µ–∂–¥—É –∏–ª–ª—é–∑–∏–µ–π –∏ –ø—Ä–∞–≤–¥–æ–π',
      '–í–∏–∂—É, –∫–∞–∫ –æ–Ω–∞ —Å–µ–±—è –æ–±–º–∞–Ω—ã–≤–∞–µ—Ç',
      '–†–∞—Å—Ç–≤–æ—Ä—è—é –≥—Ä–∞–Ω–∏—Ü—ã –º–µ–∂–¥—É –µ—ë –∂–µ–ª–∞–Ω–∏—è–º–∏ –∏ —Å—Ç—Ä–∞—Ö–∞–º–∏',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –æ–Ω–∞ —Å–µ–±–µ –ø—Ä–∏–¥—É–º–∞–ª–∞ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑',
      '–û–Ω–∞ –∂–∏–≤—ë—Ç –≤ —Å–≤–æ–∏—Ö —Ñ–∞–Ω—Ç–∞–∑–∏—è—Ö –±–æ–ª—å—à–µ, —á–µ–º –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏',
    ],
    '–£—Ä–∞–Ω': [
      '–í—Å—Ç—Ä—è—Ö–Ω—É –µ—ë –ø—Ä–∏–≤—ã—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã',
      '–ü–æ—Ä–∞ –≤—ã–±–∏—Ç—å –µ—ë –∏–∑ –∑–æ–Ω—ã –∫–æ–º—Ñ–æ—Ä—Ç–∞',
      '–ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –ø–æ–≤–æ—Ä–æ—Ç–æ–≤',
      '–ü–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ –æ–Ω–∞ –æ—Ç—Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ö–∞–æ—Å',
      '–†–∞–∑—Ä—É—à—É –µ—ë –∏–ª–ª—é–∑–∏—é –∫–æ–Ω—Ç—Ä–æ–ª—è',
    ],
    '–í–µ–Ω–µ—Ä–∞': [
      '–í–∏–∂—É, –∫–∞–∫ –æ–Ω–∞ –ø—Ä–∏—Ç–≤–æ—Ä—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º–∏',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –æ–Ω–∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ü–µ–Ω–∏—Ç',
      '–ó–∞–º–µ—á–∞—é –µ—ë –º–∞—Å–∫–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö',
      '–û–Ω–∞ –≤—ã–±–∏—Ä–∞–µ—Ç —É–¥–æ–±–Ω–æ–µ, –∞ –Ω–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ',
      '–ü–æ—Å–º–æ—Ç—Ä—é, –≥–æ—Ç–æ–≤–∞ –ª–∏ –æ–Ω–∞ –∫ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ —Å —Å–æ–±–æ–π',
    ],
    '–°–∞—Ç—É—Ä–Ω': [
      '–ü—Ä–æ–≤–µ—Ä—è—é –µ—ë –Ω–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Å —Å–æ–±–æ–π',
      '–í–∏–∂—É, –≥–¥–µ –æ–Ω–∞ —Å–∞–º–∞ —Å–µ–±–µ –≤—Ä—ë—Ç',
      '–£—Å—Ç–∞–Ω–æ–≤–ª—é –≥—Ä–∞–Ω–∏—Ü—ã, –ø–æ—Å–º–æ—Ç—Ä–∏–º, –≤—ã–¥–µ—Ä–∂–∏—Ç –ª–∏',
      '–û–Ω–∞ –∏–∑–±–µ–≥–∞–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è',
      '–ü–æ—Ä–∞ —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏',
    ],
    '–•–∏—Ä–æ–Ω': [
      '–ù–∞—â—É–ø–∞–ª –µ—ë –≥–ª–∞–≤–Ω—É—é —Ä–∞–Ω—É',
      '–í–∏–∂—É, –æ—Ç–∫—É–¥–∞ —Ä–∞—Å—Ç—É—Ç –µ—ë —Å—Ç—Ä–∞—Ö–∏',
      '–¢—É—Ç –±–æ–ª—å, —Å –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∞',
      '–û–±–Ω–∞—Ä—É–∂–∏–ª –µ—ë —Å–ª–∞–±–æ–µ –º–µ—Å—Ç–æ',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –≥–æ—Ç–æ–≤–∞ –ª–∏ –æ–Ω–∞ –∫ –∏—Å—Ü–µ–ª–µ–Ω–∏—é',
    ],
    '–ú–µ—Ä–∫—É—Ä–∏–π': [
      '–§–æ—Ä–º—É–ª–∏—Ä—É—é –µ—ë –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç',
      '–í–∏–∂—É –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ –≤ –µ—ë –ª–æ–≥–∏–∫–µ',
      '–°–æ—Å—Ç–∞–≤–ª—è—é –¥–∏–ª–µ–º–º—É, –≥–¥–µ –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –µ—ë –ø—É–≥–∞—é—Ç',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –æ–Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–≤–æ–π –≤—ã–±–æ—Ä',
      '–û–Ω–∞ –¥—É–º–∞–µ—Ç –æ–¥–Ω–æ, –≥–æ–≤–æ—Ä–∏—Ç –¥—Ä—É–≥–æ–µ, –¥–µ–ª–∞–µ—Ç —Ç—Ä–µ—Ç—å–µ',
    ],
    '–ú–∞—Ä—Å': [
      '–ü–æ–¥–±–∏—Ä–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥—Ä–∞–¥—É—Å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è',
      '–î–æ–±–∞–≤–ª—é –∞–≥—Ä–µ—Å—Å–∏–∏ –≤ –µ—ë –≤—ã–±–æ—Ä—ã',
      '–ü–æ—Å–º–æ—Ç—Ä–∏–º, –º–æ–∂–µ—Ç –ª–∏ –æ–Ω–∞ –ø–æ—Å—Ç–æ—è—Ç—å –∑–∞ —Å–µ–±—è',
      '–ü—Ä–æ–≤–µ—Ä—é –µ—ë –Ω–∞ —Å–º–µ–ª–æ—Å—Ç—å',
      '–û–Ω–∞ —á–∞—Å—Ç–æ —É—Å—Ç—É–ø–∞–µ—Ç, –∫–æ–≥–¥–∞ –Ω–∞–¥–æ –±–æ—Ä–æ—Ç—å—Å—è',
    ],
    '–Æ–ø–∏—Ç–µ—Ä': [
      '–†–∞—Å—à–∏—Ä—è—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—ë –∏—Å—Ç–æ—Ä–∏–∏',
      '–í–∏–∂—É –±–æ–ª–µ–µ —à–∏—Ä–æ–∫—É—é –∫–∞—Ä—Ç–∏–Ω—É',
      '–î–æ–±–∞–≤–ª—è—é —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Å–º—ã—Å–ª',
      '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫–æ–π —É—Ä–æ–∫ –æ–Ω–∞ –∏–∑–≤–ª–µ—á—ë—Ç',
      '–ü–æ–∫–∞–∑—ã–≤–∞—é –µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –æ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∞ –Ω–µ –¥—É–º–∞–ª–∞',
    ],
  };

  return fallbacks[planet] || [
    '–ù–∞–±–ª—é–¥–∞—é –∑–∞ –µ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º',
    '–í–∏–∂—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã',
    '–ì–æ—Ç–æ–≤–ª—é —Å—é—Ä–ø—Ä–∏–∑—ã',
    '–ü–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ –æ–Ω–∞ —Å–ø—Ä–∞–≤–∏—Ç—Å—è',
    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å',
  ];
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä fallback —Å–æ–æ–±—â–µ–Ω–∏–π
 */
function getFallbackPlanetMessages(): PersonalizedPlanetMessages {
  const planets = ['–õ—É–Ω–∞', '–ü–ª—É—Ç–æ–Ω', '–ù–µ–ø—Ç—É–Ω', '–£—Ä–∞–Ω', '–í–µ–Ω–µ—Ä–∞', '–°–∞—Ç—É—Ä–Ω', '–•–∏—Ä–æ–Ω', '–ú–µ—Ä–∫—É—Ä–∏–π', '–ú–∞—Ä—Å', '–Æ–ø–∏—Ç–µ—Ä'];

  return {
    messages: planets.map(planet => ({
      planet,
      messages: getFallbackMessages(planet),
    })),
    timestamp: Date.now(),
  };
}
