import { callAI, type AIMessage } from './aiClient';

export interface InsightDescription {
  scientific: string;
  human: string;
}

interface InsightGenerationParams {
  metricType: 'cycle-length' | 'next-period' | 'fertile-window' | 'trend';
  metricData: {
    value: string;
    variability?: number;
    confidence?: number;
    trend?: number;
  };
  signal?: AbortSignal;
  apiKey?: string;
  claudeProxyUrl?: string;
  openAIApiKey?: string;
}

const METRIC_NAMES: Record<string, string> = {
  'cycle-length': '—Å—Ä–µ–¥–Ω–∏–π —Ü–∏–∫–ª',
  'next-period': '–ø—Ä–æ–≥–Ω–æ–∑ —Å–ª–µ–¥—É—é—â–µ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏',
  'fertile-window': '—Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ–µ –æ–∫–Ω–æ',
  'trend': '—Ç—Ä–µ–Ω–¥ —Ü–∏–∫–ª–∞',
};

const LOADING_PHRASES = [
  { emoji: 'üî¨', text: '–ó–≤–æ–Ω–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä—É –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏, –æ–Ω —á—Ç–æ-—Ç–æ —Ç–∞–º –±–æ—Ä–º–æ—á–µ—Ç –ø—Ä–æ —è–∏—á–Ω–∏–∫–∏‚Ä¶' },
  { emoji: 'üìö', text: '–õ–∏—Å—Ç–∞–µ–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—á–µ–±–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ —á–∏—Ç–∞–µ—Ç –Ω–∞—Ö—É–π.' },
  { emoji: 'üß¨', text: '–ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ä–º–æ–Ω—ã –∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–Ω—è—Ç—å, –∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≥–ª–∞–≤–Ω—ã–π ‚Äî —ç—Å—Ç—Ä–æ–≥–µ–Ω –∏–ª–∏ –ø—Ä–æ–≥–µ—Å—Ç–µ—Ä–æ–Ω.' },
  { emoji: 'ü©∫', text: '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –º–Ω–µ–Ω–∏–µ —É —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∞, –Ω–æ –æ–Ω –æ–ø—è—Ç—å –æ–ø–∞–∑–¥—ã–≤–∞–µ—Ç –Ω–∞ –≤—Å—Ç—Ä–µ—á—É.' },
  { emoji: 'üß™', text: '–î–µ–ª–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ ‚Äî –Ω—É –ø–æ—á—Ç–∏ –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π, —Ç–æ–ª—å–∫–æ –ø—Ä–æ—â–µ.' },
  { emoji: 'üíä', text: '–ó–≤–æ–Ω–∏–º —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç—É —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ —Ç–∞–±–ª–µ—Ç–∫–∏ –ø–æ–º–æ–≥–ª–∏ –±—ã, –Ω–æ —Ç–∞–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫.' },
  { emoji: 'üîç', text: '–ò—â–µ–º –≤ –≥—É–≥–ª–µ –Ω–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏, –∞ —Ç–∞–º –æ–¥–Ω–∏ –ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏, –±–ª—è—Ç—å.' },
  { emoji: 'üß†', text: '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º—Å—è —Å –Ω–µ–π—Ä–æ—ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–º, –Ω–æ –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç —Å–ª–∏—à–∫–æ–º —É–º–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.' },
];

export function getRandomLoadingPhrase() {
  return LOADING_PHRASES[Math.floor(Math.random() * LOADING_PHRASES.length)];
}

function buildPrompt(params: InsightGenerationParams): string {
  const metricName = METRIC_NAMES[params.metricType];
  const { value, variability, confidence, trend } = params.metricData;

  let dataDescription = `–ó–Ω–∞—á–µ–Ω–∏–µ: ${value}`;
  if (variability !== undefined) {
    dataDescription += `, –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å ¬±${variability.toFixed(1)}`;
  }
  if (confidence !== undefined) {
    dataDescription += `, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${confidence}%`;
  }
  if (trend !== undefined) {
    dataDescription += `, —Ç—Ä–µ–Ω–¥ ${trend > 0 ? '—É–≤–µ–ª–∏—á–µ–Ω–∏–µ' : '—É–º–µ–Ω—å—à–µ–Ω–∏–µ'} –Ω–∞ ${Math.abs(trend).toFixed(1)} –¥–Ω/—Ü–∏–∫–ª`;
  }

  return `–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∂–µ–Ω—Å–∫–æ–≥–æ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –¢–µ–±–µ –Ω—É–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å "${metricName}". ${dataDescription}

–ù–∞–ø–∏—à–∏ –î–í–ê –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏—è ‚Äî –∫–∞–∂–¥—ã–π –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 100 —Å–ª–æ–≤:

1. **–ù–∞—É—á–Ω—ã–π —Å—Ç–∏–ª—å**: –û–±—ä—è—Å–Ω–∏ —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —ç—Ç–æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞—Å—Ç–æ—è—â–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã (–Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Å–ª–æ–≤–∞!), –±—É–¥—å —Ç–æ—á–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º. –£–ø–æ–º—è–Ω–∏ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –∏–ª–∏ –Ω–æ—Ä–º—É.

2. **–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å**: –û–±—ä—è—Å–Ω–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, –ø–æ-–∂–µ–Ω—Å–∫–∏, —Å —Å–∞—Ä–∫–∞–∑–º–æ–º –∏ –ª—ë–≥–∫–∏–º –º–∞—Ç–æ–º (1-2 —Å–ª–æ–≤–∞). –î–æ–±–∞–≤—å —é–º–æ—Ä –∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å. –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –±—ã–ª–æ –ø—Ä–∏–∫–æ–ª—å–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ JSON):
\`\`\`json
{
  "scientific": "–¢–µ–∫—Å—Ç –Ω–∞—É—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è...",
  "human": "–¢–µ–∫—Å—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è..."
}
\`\`\``;
}

export async function generateInsightDescription(
  params: InsightGenerationParams
): Promise<InsightDescription> {
  console.log('[Insight Content] Generating description for:', params.metricType, 'with keys:', {
    hasClaudeKey: Boolean(params.apiKey),
    hasClaudeProxy: Boolean(params.claudeProxyUrl),
    hasOpenAIKey: Boolean(params.openAIApiKey),
  });

  const prompt = buildPrompt(params);

  const messages: AIMessage[] = [
    {
      role: 'user',
      content: prompt,
    },
  ];

  try {
    const { text, provider } = await callAI({
      messages,
      signal: params.signal,
      claudeApiKey: params.apiKey,
      claudeProxyUrl: params.claudeProxyUrl,
      openAIApiKey: params.openAIApiKey,
      maxTokens: 800,
      temperature: 0.8,
    });

    console.log('[Insight Content] ‚úÖ Generated via', provider);

    // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const jsonMatch = text.match(/```json\s*([\s\S]*?)\s*```/) || text.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      const jsonText = jsonMatch[1] || jsonMatch[0];
      const parsed = JSON.parse(jsonText) as InsightDescription;

      if (parsed.scientific && parsed.human) {
        return parsed;
      }
    }

    throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
  } catch (error) {
    console.error('[Insight Content] ‚ùå Failed to generate:', error);
    throw error;
  }
}

export function getFallbackInsightDescription(metricType: string): InsightDescription {
  const fallbacks: Record<string, InsightDescription> = {
    'cycle-length': {
      scientific: '–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 28 –¥–Ω–µ–π, –æ–¥–Ω–∞–∫–æ –Ω–æ—Ä–º–æ–π —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 21 –¥–æ 35 –¥–Ω–µ–π. –†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å —Ü–∏–∫–ª–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≥–∏–ø–æ—Ç–∞–ª–∞–º–æ-–≥–∏–ø–æ—Ñ–∏–∑–∞—Ä–Ω–æ-—è–∏—á–Ω–∏–∫–æ–≤–æ–π –æ—Å—å—é –∏ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Å—Ç—Ä–µ—Å—Å–∞, –ø–∏—Ç–∞–Ω–∏—è –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤.',
      human: '–¢–≤–æ–π —Ü–∏–∫–ª –∫—Ä—É—Ç–∏—Ç—Å—è –≤–æ–∫—Ä—É–≥ 28 –¥–Ω–µ–π, —á—Ç–æ –≤–ø–æ–ª–Ω–µ –Ω–æ—Ä–º. –ù–æ –µ—Å–ª–∏ –æ–Ω —Å–∫–∞—á–µ—Ç —Ç—É–¥–∞-—Å—é–¥–∞, –Ω–µ –ø–∞—Ä—å—Å—è ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –ø–æ–∫–∞ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ 21-35 –¥–Ω–µ–π. –û—Ä–≥–∞–Ω–∏–∑–º —Ç–æ–∂–µ –∂–∏–≤–æ–π, –µ–º—É —Ç–æ–∂–µ —Ö–æ—á–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ —Ö–∞–æ—Å–∞ –∏–Ω–æ–≥–¥–∞, –±–ª—è—Ç—å.',
    },
    'next-period': {
      scientific: '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ü–∏–∫–ª–æ–≤ —Å —É—á—ë—Ç–æ–º –∏—Ö —Å—Ä–µ–¥–Ω–µ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏. –¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≤—ã—à–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö –∏ —Å–Ω–∏–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
      human: '–ú—ã —Ç—É—Ç –ø—Ä–∏–∫–∏–Ω—É–ª–∏, –∫–æ–≥–¥–∞ —É —Ç–µ–±—è —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Å—è—á–Ω—ã–µ, –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ —Ö–æ–¥–∏–ª–∏ —Ä–∞–Ω—å—à–µ. –ï—Å–ª–∏ —Ü–∏–∫–ª —Å—Ç–∞–±–∏–ª—å–Ω—ã–π ‚Äî –ø–æ–ø–∞–¥—ë–º –ø–æ—á—Ç–∏ –≤ —Ç–æ—á–∫—É. –ï—Å–ª–∏ —Å–∫–∞—á–µ—Ç ‚Äî –Ω—É –∏–∑–≤–∏–Ω–∏, –º—ã –Ω–µ —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å—ã, –Ω–æ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è.',
    },
    'fertile-window': {
      scientific: '–§–µ—Ä—Ç–∏–ª—å–Ω–æ–µ –æ–∫–Ω–æ ‚Äî —ç—Ç–æ –ø–µ—Ä–∏–æ–¥ –ø—Ä–∏–º–µ—Ä–Ω–æ 6 –¥–Ω–µ–π, –∫–æ–≥–¥–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞—á–∞—Ç–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞. –û–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç 5 –¥–Ω–µ–π –¥–æ –æ–≤—É–ª—è—Ü–∏–∏ –∏ –¥–µ–Ω—å –æ–≤—É–ª—è—Ü–∏–∏. –û–≤—É–ª—è—Ü–∏—è –æ–±—ã—á–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞ 14 –¥–Ω–µ–π –¥–æ –Ω–∞—á–∞–ª–∞ —Å–ª–µ–¥—É—é—â–µ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏.',
      human: '–§–µ—Ä—Ç–∏–ª—å–Ω–æ–µ –æ–∫–Ω–æ ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Ç–≤–æ–∏ —è–π—Ü–µ–∫–ª–µ—Ç–∫–∏ –≥–æ—Ç–æ–≤—ã –∫ –≤–µ—á–µ—Ä–∏–Ω–∫–µ. –î–ª–∏—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ 6 –¥–Ω–µ–π: 5 –¥–Ω–µ–π –¥–æ –æ–≤—É–ª—è—Ü–∏–∏ –∏ —Å–∞–º –¥–µ–Ω—å –æ–≤—É–ª—è—Ü–∏–∏. –ï—Å–ª–∏ –Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –¥–µ—Ç–µ–π ‚Äî –±—É–¥—å –Ω–∞—á–µ–∫—É, –µ—Å–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å ‚Äî —Å–∞–º–æ–µ –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.',
    },
    'trend': {
      scientific: '–¢—Ä–µ–Ω–¥ —Ü–∏–∫–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –µ–≥–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. –ù–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–¥–æ 2-3 –¥–Ω–µ–π) —Å—á–∏—Ç–∞—é—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º–∏ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º, –æ–±—Ä–∞–∑–æ–º –∂–∏–∑–Ω–∏ –∏–ª–∏ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.',
      human: '–¢—Ä–µ–Ω–¥ ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Ü–∏–∫–ª –ª–∏–±–æ —É–¥–ª–∏–Ω—è–µ—Ç—Å—è, –ª–∏–±–æ —É–∫–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è. –ï—Å–ª–∏ –Ω–∞ –ø–∞—Ä—É –¥–Ω–µ–π ‚Äî –Ω–æ—Ä–º, –æ—Ä–≥–∞–Ω–∏–∑–º –º–µ–Ω—è–µ—Ç—Å—è. –ï—Å–ª–∏ —Å–∏–ª—å–Ω–æ —Å–∫–∞—á–µ—Ç ‚Äî —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ, –º–æ–∂–µ—Ç, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ù–æ –ø–∞–Ω–∏–∫–æ–≤–∞—Ç—å —Ä–∞–Ω–æ, –ø—Ä–æ—Å—Ç–æ –ø–æ–Ω–∞–±–ª—é–¥–∞–π.',
    },
  };

  return fallbacks[metricType] || {
    scientific: '–≠—Ç–æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.',
    human: '–≠—Ç–æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å —Ç–≤–æ–∏–º —Ü–∏–∫–ª–æ–º. –í –æ–±—â–µ–º, –ø–æ–ª–µ–∑–Ω–∞—è —à—Ç—É–∫–∞, —Å–ª–µ–¥–∏ –∑–∞ –Ω–∏–º.',
  };
}
