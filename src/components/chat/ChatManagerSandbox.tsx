import React, { useRef, useState, useCallback } from 'react';
import { ChatManager, type ChatManagerHandle } from './ChatManager';
import type { PlanetMessage, MoonMessage, StoryMessage, UserMessage } from '../../types/chat';
import type { HistoryStoryOption } from '../../utils/historyStory';

/**
 * –ü–µ—Å–æ—á–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ChatManager.
 * –û—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π.
 */
const TAB_BAR_HEIGHT = 80; // –í—ã—Å–æ—Ç–∞ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ (–∫–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)

export const ChatManagerSandbox: React.FC = () => {
  const chatRef = useRef<ChatManagerHandle>(null);
  const chatScrollRef = useRef<HTMLDivElement>(null);
  const [messageCounter, setMessageCounter] = useState(1);
  const [showTabBar, setShowTabBar] = useState(true);

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID
  const generateId = () => `msg-${Date.now()}-${Math.random().toString(36).slice(2, 9)}`;

  // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  const getCurrentTime = () =>
    new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });

  // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const handleMessagesChange = useCallback(() => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–æ–π–Ω–æ–π RAF –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ - DOM –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          if (chatScrollRef.current) {
            // –ü—Ä–æ—Å—Ç–æ —Å–∫—Ä–æ–ª–ª–∏–º –¥–æ –∫–æ–Ω—Ü–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            // Tab bar —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ paddingBottom –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            chatScrollRef.current.scrollTo({
              top: chatScrollRef.current.scrollHeight,
              behavior: 'smooth',
            });
            console.log(
              '[Sandbox] Auto-scroll to:',
              chatScrollRef.current.scrollHeight,
              'Tab Bar:',
              showTabBar ? 'ON (padding-bottom applied)' : 'OFF'
            );
          }
        });
      });
    });
  }, [showTabBar]);

  // –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–ª–∞–Ω–µ—Ç—ã
  const addPlanetMessage = (planet: string, content: string) => {
    const message: PlanetMessage = {
      id: generateId(),
      author: planet as any,
      time: getCurrentTime(),
      type: 'planet',
      content,
    };
    chatRef.current?.addMessage(message);
    setMessageCounter((c) => c + 1);
  };

  // –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –õ—É–Ω—ã
  const addMoonMessage = (content: string) => {
    const message: MoonMessage = {
      id: generateId(),
      author: '–õ—É–Ω–∞',
      time: getCurrentTime(),
      type: 'moon',
      content,
    };
    chatRef.current?.addMessage(message);
    setMessageCounter((c) => c + 1);
  };

  // –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
  const addStoryMessage = (content: string, arcNumber: number = 1) => {
    const message: StoryMessage = {
      id: generateId(),
      author: '–ò—Å—Ç–æ—Ä–∏—è',
      time: getCurrentTime(),
      type: 'story',
      content,
      arcNumber,
      stageLabel: '–ó–∞–≤—è–∑–∫–∞',
    };
    chatRef.current?.addMessage(message);
    setMessageCounter((c) => c + 1);
  };

  // –°–∏–º—É–ª—è—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø–ª–∞–Ω–µ—Ç
  const simulatePlanetDialogue = () => {
    chatRef.current?.setPhase('dialogue');

    const planets = ['–ú–µ—Ä–∫—É—Ä–∏–π', '–í–µ–Ω–µ—Ä–∞', '–ú–∞—Ä—Å', '–Æ–ø–∏—Ç–µ—Ä', '–°–∞—Ç—É—Ä–Ω'];
    const messages = [
      '–ü—Ä–∏–≤–µ—Ç! –Ø –Ω–∞—á–Ω—É –¥–∏–∞–ª–æ–≥.',
      '–°–æ–≥–ª–∞—Å–Ω–∞, –¥–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –∫–∞—Ä—Ç—É –ù–∞—Å—Ç–∏.',
      '–í–∏–∂—É —Ç—É—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã!',
      '–ù—É–∂–Ω–æ –≥–ª—É–±–∂–µ –∫–æ–ø–Ω—É—Ç—å.',
      '–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏–¥—É–º–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é.',
    ];

    let delay = 0;
    planets.forEach((planet, index) => {
      setTimeout(() => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        chatRef.current?.setTyping(planet as any);

        setTimeout(() => {
          // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
          chatRef.current?.setTyping(null);
          addPlanetMessage(planet, messages[index]);
        }, 1500);
      }, delay);
      delay += 2500;
    });

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –õ—É–Ω–µ
    setTimeout(() => {
      chatRef.current?.setPhase('moon');
      chatRef.current?.setTyping('–õ—É–Ω–∞');

      setTimeout(() => {
        chatRef.current?.setTyping(null);
        addMoonMessage('–ò—Ç–∞–∫, –ø–ª–∞–Ω–µ—Ç—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è —Ç–µ–±—è –∏—Å—Ç–æ—Ä–∏—é –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ.');
      }, 1500);
    }, delay + 1000);
  };

  // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const showChoices = () => {
    const choices: HistoryStoryOption[] = [
      {
        id: 'choice-1',
        title: '–°–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–¥—É',
        description: '–ß–µ—Å—Ç–Ω–æ –æ–∑–≤—É—á–∏—Ç—å —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏',
        kind: 'ai',
      },
      {
        id: 'choice-2',
        title: '–ü—Ä–æ–º–æ–ª—á–∞—Ç—å',
        description: '–ü—Ä–æ–º–æ–ª—á–∞—Ç—å —Ä–∞–¥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∏—Ä–∞',
        kind: 'ai',
      },
    ];

    chatRef.current?.setChoices(choices);
    chatRef.current?.setPhase('story');
  };

  // –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ñ–ª–æ—É –∏—Å—Ç–æ—Ä–∏–∏
  const simulateStoryFlow = () => {
    chatRef.current?.setPhase('story');

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    addStoryMessage(
      '–¢—ã —Å—Ç–æ–∏—à—å –Ω–∞ –ø–µ—Ä–µ–ø—É—Ç—å–µ. –ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—Å–∏—Ç –æ –ø–æ–º–æ—â–∏, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å —Ç–≤–æ–∏ –ø–ª–∞–Ω—ã.',
      1
    );

    // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
    setTimeout(() => {
      showChoices();
    }, 1000);
  };

  // –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ù–∞—Å—Ç–∏
  const addUserMessage = (content: string) => {
    const message: UserMessage = {
      id: generateId(),
      author: '–ù–∞—Å—Ç—è',
      time: getCurrentTime(),
      type: 'user',
      content,
    };
    chatRef.current?.addMessage(message);
    setMessageCounter((c) => c + 1);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏ - –ø–æ–ª–Ω—ã–π —Ñ–ª–æ—É
  const handleChoiceSelect = (choice: HistoryStoryOption) => {
    console.log('Selected choice:', choice);

    // 1. –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
    chatRef.current?.hideChoices();

    // 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ù–∞—Å—Ç–∏ —Å —Ç–µ–∫—Å—Ç–æ–º –≤—ã–±–æ—Ä–∞
    setTimeout(() => {
      const choiceText = choice.description
        ? `${choice.title}. ${choice.description}`
        : choice.title;
      addUserMessage(choiceText);

      // 3. –í–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
      setTimeout(() => {
        chatRef.current?.setTyping('–ò—Å—Ç–æ—Ä–∏—è');

        // 4. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        setTimeout(() => {
          chatRef.current?.setTyping(null);
          addStoryMessage(
            `–¢—ã –≤—ã–±—Ä–∞–ª–∞ "${choice.title}". –¢–≤–æ–π –≤—ã–±–æ—Ä –ø—Ä–∏–≤–µ–ª –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º...`,
            2
          );

          // 5. –°–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
          setTimeout(() => {
            showChoices();
          }, 1000);
        }, 2000); // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ 2 —Å–µ–∫—É–Ω–¥—ã
      }, 300);
    }, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
  };

  return (
    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π */}
      <div style={{ padding: '20px', background: 'white', borderBottom: '2px solid #e5e7eb' }}>
        <h1 style={{ margin: 0 }}>üß™ ChatManager Sandbox</h1>
      </div>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è */}
      <div
        style={{
          background: '#f5f5f5',
          padding: '15px 20px',
          borderBottom: '2px solid #e5e7eb',
          overflowY: 'auto',
          maxHeight: '200px',
        }}
      >
        <h2 style={{ marginTop: 0, fontSize: '18px' }}>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>

        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>
          <button onClick={() => chatRef.current?.setPhase('idle')} style={buttonStyle}>
            –§–∞–∑–∞: idle
          </button>
          <button onClick={() => chatRef.current?.setPhase('dialogue')} style={buttonStyle}>
            –§–∞–∑–∞: dialogue
          </button>
          <button onClick={() => chatRef.current?.setPhase('moon')} style={buttonStyle}>
            –§–∞–∑–∞: moon
          </button>
          <button onClick={() => chatRef.current?.setPhase('story')} style={buttonStyle}>
            –§–∞–∑–∞: story
          </button>
          <button onClick={() => chatRef.current?.setPhase('finale')} style={buttonStyle}>
            –§–∞–∑–∞: finale
          </button>
        </div>

        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>
          <button
            onClick={() => addPlanetMessage('–ú–µ—Ä–∫—É—Ä–∏–π', `–°–æ–æ–±—â–µ–Ω–∏–µ ${messageCounter} –æ—Ç –ú–µ—Ä–∫—É—Ä–∏—è`)}
            style={buttonStyle}
          >
            + –ú–µ—Ä–∫—É—Ä–∏–π
          </button>
          <button
            onClick={() => addPlanetMessage('–í–µ–Ω–µ—Ä–∞', `–°–æ–æ–±—â–µ–Ω–∏–µ ${messageCounter} –æ—Ç –í–µ–Ω–µ—Ä—ã`)}
            style={buttonStyle}
          >
            + –í–µ–Ω–µ—Ä–∞
          </button>
          <button
            onClick={() => addPlanetMessage('–ú–∞—Ä—Å', `–°–æ–æ–±—â–µ–Ω–∏–µ ${messageCounter} –æ—Ç –ú–∞—Ä—Å–∞`)}
            style={buttonStyle}
          >
            + –ú–∞—Ä—Å
          </button>
          <button
            onClick={() => addMoonMessage(`–°–æ–æ–±—â–µ–Ω–∏–µ ${messageCounter} –æ—Ç –õ—É–Ω—ã`)}
            style={buttonStyle}
          >
            + –õ—É–Ω–∞
          </button>
          <button
            onClick={() =>
              addStoryMessage(`–§—Ä–∞–≥–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ ${messageCounter}. –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏.`, 1)
            }
            style={buttonStyle}
          >
            + –ò—Å—Ç–æ—Ä–∏—è
          </button>
        </div>

        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>
          <button onClick={() => chatRef.current?.setTyping('–ú–µ—Ä–∫—É—Ä–∏–π')} style={buttonStyle}>
            –ü–µ—á–∞—Ç–∞–µ—Ç: –ú–µ—Ä–∫—É—Ä–∏–π
          </button>
          <button onClick={() => chatRef.current?.setTyping('–õ—É–Ω–∞')} style={buttonStyle}>
            –ü–µ—á–∞—Ç–∞–µ—Ç: –õ—É–Ω–∞
          </button>
          <button onClick={() => chatRef.current?.setTyping('–ò—Å—Ç–æ—Ä–∏—è')} style={buttonStyle}>
            –ü–µ—á–∞—Ç–∞–µ—Ç: –ò—Å—Ç–æ—Ä–∏—è
          </button>
          <button onClick={() => chatRef.current?.setTyping(null)} style={buttonStyle}>
            –ü–µ—á–∞—Ç—å: —Å—Ç–æ–ø
          </button>
        </div>

        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>
          <button onClick={showChoices} style={{ ...buttonStyle, background: '#8b5cf6' }}>
            –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
          </button>
          <button onClick={simulatePlanetDialogue} style={{ ...buttonStyle, background: '#10b981' }}>
            üé¨ –°–∏–º—É–ª—è—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø–ª–∞–Ω–µ—Ç
          </button>
          <button onClick={simulateStoryFlow} style={{ ...buttonStyle, background: '#f59e0b' }}>
            üìñ –°–∏–º—É–ª—è—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
          </button>
        </div>

        <div style={{ display: 'flex', gap: '10px' }}>
          <button
            onClick={() => chatRef.current?.clearMessages()}
            style={{ ...buttonStyle, background: '#ef4444' }}
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë
          </button>
          <button
            onClick={() => {
              console.log('Current phase:', chatRef.current?.getPhase());
              console.log('Current arc:', chatRef.current?.getCurrentArc());
              console.log('Messages:', chatRef.current?.getMessages());
            }}
            style={{ ...buttonStyle, background: '#3b82f6' }}
          >
            üìä –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          </button>
          <button
            onClick={() => setShowTabBar((prev) => !prev)}
            style={{ ...buttonStyle, background: showTabBar ? '#10b981' : '#6b7280' }}
          >
            {showTabBar ? '‚úÖ Tab Bar: ON' : '‚¨ú Tab Bar: OFF'}
          </button>
        </div>

        <div style={{ marginTop: '15px', fontSize: '14px', color: '#666' }}>
          <strong>–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞:</strong> {chatRef.current?.getPhase() ?? 'idle'} <br />
          <strong>Arc:</strong> {chatRef.current?.getCurrentArc() ?? 1} <br />
          <strong>–°–æ–æ–±—â–µ–Ω–∏–π:</strong> {chatRef.current?.getMessages()?.length ?? 0} <br />
          <strong>Tab Bar:</strong> {showTabBar ? '‚úÖ –í–∫–ª—é—á–µ–Ω (+80px offset)' : '‚¨ú –í—ã–∫–ª—é—á–µ–Ω (0px offset)'}
        </div>
      </div>

      {/* Scrollable –æ–±–ª–∞—Å—Ç—å —Å ChatManager –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ */}
      <div
        style={{
          flex: 1,
          overflowY: 'auto',
          padding: '20px',
          background: '#fafafa'
        }}
      >
        {/* ChatManager */}
        <div
          style={{
            border: '2px solid #e5e7eb',
            borderRadius: '12px',
            height: '400px', // –§–ò–ö–°–ò–†–û–í–ê–ù–ù–ê–Ø –≤—ã—Å–æ—Ç–∞
            background: 'white',
            padding: '20px',
            marginBottom: '20px',
            overflow: 'hidden', // –ü—Ä—è—á–µ–º overflow
            display: 'flex',
            flexDirection: 'column',
          }}
        >
          <div ref={chatScrollRef} style={{ flex: 1, overflow: 'auto' }}>
            <div style={{ paddingBottom: showTabBar ? `${TAB_BAR_HEIGHT}px` : '0px' }}>
              <ChatManager
                ref={chatRef}
                onChoiceSelect={handleChoiceSelect}
                onCustomOptionClick={() => {
                  console.log('Custom option clicked!');
                  alert('–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ');
                }}
                onMessagesChange={handleMessagesChange}
                isActive={false}
                storyTitle="–ò—Å—Ç–æ—Ä–∏—è (—Ç–µ—Å—Ç)"
              />
            </div>
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div style={{ fontSize: '14px', color: '#666', background: 'white', padding: '20px', borderRadius: '12px' }}>
          <h3>üìñ –ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:</h3>
        <ol>
          <li>
            <strong>üé¨ –î–∏–∞–ª–æ–≥ –ø–ª–∞–Ω–µ—Ç:</strong> –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø–ª–∞–Ω–µ—Ç ‚Üí —Å–æ–æ–±—â–µ–Ω–∏–µ –õ—É–Ω—ã
          </li>
          <li>
            <strong>üìñ –ò—Å—Ç–æ—Ä–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–ì–õ–ê–í–ù–´–ô –¢–ï–°–¢):</strong> –ù–∞–∂–º–∏ "üìñ –°–∏–º—É–ª—è—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏"
            <ul>
              <li>–ü–æ—è–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏</li>
              <li>–ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ—è–≤—è—Ç—Å—è –æ–¥–Ω–∞ –∑–∞ –¥—Ä—É–≥–æ–π (–∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –∫–∞–∂–¥–æ–π!)</li>
              <li>–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî –æ–Ω –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ù–∞—Å—Ç–∏</li>
              <li>–ü–æ—è–≤–∏—Ç—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ "..."</li>
              <li>–ü–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏</li>
              <li>–°–Ω–æ–≤–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ</li>
            </ul>
          </li>
          <li>
            <strong>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Ä—É—á–Ω—É—é:</strong> –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ "+ –ú–µ—Ä–∫—É—Ä–∏–π", "+ –í–µ–Ω–µ—Ä–∞" –∏ —Ç.–¥.
          </li>
          <li>
            <strong>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–µ—á–∞—Ç–∏:</strong> –ö–Ω–æ–ø–∫–∏ "–ü–µ—á–∞—Ç–∞–µ—Ç: ..." –ø–æ–∫–∞–∂—É—Ç —Ç—Ä–∏ —Ç–æ—á–∫–∏ (–∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª!)
          </li>
          <li>
            <strong>–ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª:</strong> –°–º–æ—Ç—Ä–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥–∏ <code>[Sandbox] Auto-scroll to: ...</code>
          </li>
          <li>
            <strong>üéöÔ∏è Tab Bar (–ù–û–í–û–ï!):</strong> –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É "Tab Bar: ON/OFF" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞ —Å —É—á–µ—Ç–æ–º –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏
            <ul>
              <li>–ö–æ–≥–¥–∞ Tab Bar –≤–∫–ª—é—á–µ–Ω, –≤–Ω–∏–∑—É –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å (–∏–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)</li>
              <li>ChatManager –≤–Ω—É—Ç—Ä–∏ –ø–æ–ª—É—á–∞–µ—Ç wrapper —Å padding-bottom: 80px, —Å–æ–∑–¥–∞–≤–∞—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤–Ω–∏–∑—É</li>
              <li>–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ/–∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é (–Ω–µ —Å–∫—Ä—ã—Ç—ã –∑–∞ –ø–∞–Ω–µ–ª—å—é)</li>
              <li>–ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –¥–æ—Ö–æ–¥–∏—Ç –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑–∞, —É—á–∏—Ç—ã–≤–∞—è —ç—Ç–æ—Ç padding</li>
              <li>–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –≤—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–∫—Ä–æ–ª–ª–∏—Ç—Å—è –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–π –∏ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏</li>
              <li>–í –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Å—Ç–∞—Ç—É—Å: "Tab Bar: ON (padding-bottom applied)" –∏–ª–∏ "OFF"</li>
            </ul>
          </li>
        </ol>
        </div>
      </div>

      {/* –ò–º–∏—Ç–∞—Ü–∏—è tab bar */}
      {showTabBar && (
        <div
          style={{
            position: 'fixed',
            bottom: 0,
            left: 0,
            right: 0,
            height: `${TAB_BAR_HEIGHT}px`,
            background: 'rgba(253, 242, 248, 0.95)',
            backdropFilter: 'blur(16px)',
            borderTop: '1px solid rgba(255, 182, 193, 0.3)',
            display: 'flex',
            justifyContent: 'space-around',
            alignItems: 'center',
            padding: '0 20px',
            boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.1)',
            zIndex: 1000,
          }}
        >
          {/* –ò–º–∏—Ç–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫ */}
          <div style={{ textAlign: 'center', opacity: 0.5 }}>
            <div style={{ fontSize: '24px' }}>üìÖ</div>
            <div style={{ fontSize: '11px', marginTop: '2px' }}>–ö–∞–ª–µ–Ω–¥–∞—Ä—å</div>
          </div>
          <div style={{ textAlign: 'center', opacity: 0.5 }}>
            <div style={{ fontSize: '24px' }}>üìä</div>
            <div style={{ fontSize: '11px', marginTop: '2px' }}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</div>
          </div>
          <div style={{ textAlign: 'center', opacity: 1, color: '#ff6b9d' }}>
            <div style={{ fontSize: '24px' }}>üîÆ</div>
            <div style={{ fontSize: '11px', marginTop: '2px', fontWeight: 'bold' }}>–£–∑–Ω–∞–π —Å–µ–±—è</div>
          </div>
          <div style={{ textAlign: 'center', opacity: 0.5 }}>
            <div style={{ fontSize: '24px' }}>‚öôÔ∏è</div>
            <div style={{ fontSize: '11px', marginTop: '2px' }}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
          </div>
        </div>
      )}
    </div>
  );
};

const buttonStyle: React.CSSProperties = {
  padding: '8px 16px',
  background: '#6b7280',
  color: 'white',
  border: 'none',
  borderRadius: '6px',
  cursor: 'pointer',
  fontSize: '14px',
  fontWeight: '500',
};
